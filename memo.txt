<!DOCTYPE html>
<html>
<head>
  <title>ThreaiApp</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  <%= javascript_importmap_tags %>
  <%= stylesheet_link_tag "application", "custom", "data-turbo-track": "reload" %>
</head>
<body>
<header>
<nav class="navbar navbar-expand-lg bg-body-tertiary">
  <div class="container-fluid">
    <%= link_to "Threai", "/posts/index", class: "navbar-brand" %>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
      <div class="navbar-nav">
      <% if session[:user_id] %>
        <%= link_to 'Logout', '/users/logout', class: 'nav-link' %>
        <%= link_to 'ボタン', '/', class: 'nav-link' %>
        <a class="nav-link">
          <% if @current_user %>
             <%= "@#{@current_user.name}" %>
           <% end %>
        </a>
      <% else %>
        <%= link_to 'Signup', '/users/new', class: 'nav-link'%>
        <%= link_to 'Login', '/users/login_form', class: 'nav-link' %>
        <%= link_to 'ボタン', '/', class: 'nav-link' %>
      <% end %>
      </div>
    </div>
  </div>
</nav>
</header>

<%= yield %>

</body>
</html>








/*ver1*/

<div class="col-sm-10 col-lg-8 col-xl-6 mx-auto">
  <div class="card text-center mb-3">
    <div class="card-header d-flex justify-content-between align-items-center">
      <span>
        <% if @current_user %>
          <%= "@#{@current_user.name}" %>
        <% end %>
      </span>
    </div>
    <%= form_tag("/posts/new", class: "form-inline") do %>
      <div class="card-body">
        <textarea name="content" class="form-control" placeholder="質問を投稿する"></textarea>
        <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
      </div>
      <div class="card-footer text-right">
        <%= submit_tag "質問する", class: "btn btn-primary btn-sm mr-3" %>
      </div>
    <% end %>
  </div>

  <% @posts.each do |post| %>
    <div class="card text-center mb-3">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span><%= "@#{post.user.name}" %></span>
        <small class="bg-light"><%= post.created_at.strftime("%Y-%m-%d %H:%M") %></small>
      </div>
      <div class="card-body">
        <h5 class="card-text"><%= post.content %></h5>
      </div>
      <div class="card-footer text-muted">

      


        <% post.replies.each_with_index do |reply, index| %>
          <div class="<%= index == 0 ? 'text-center' : 'text-start' %>">
            <div class="card my-2 d-inline-block text-start">
              <div class="card-body p-2">
                <small class="text-muted"><%= "@#{reply.user.name}" %></small>
                <p class="mb-0"><%= reply.content %></p>
              </div>
            </div>
          </div>
        <% end %>

        <%= form_tag("/posts/reply", class: "form-inline mt-3") do %>
          <div class="input-group">
            <textarea name="content" class="form-control" placeholder="返信を入力"></textarea>
            <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
            <%= hidden_field_tag :post_id, post.id %>
            <button type="submit" class="btn btn-primary btn-sm">
              <i class="bi bi-reply"></i> <!-- Bootstrapアイコンの使用 -->
            </button>
          </div>
        <% end %>
      </div>
    </div>
  <% end %>
</div>


/*ver2*/

<div class="col-sm-10 col-lg-8 col-xl-6 mx-auto">
  <div class="card text-center mb-3">
    <div class="card-header d-flex justify-content-between align-items-center">
      <span>
        <% if @current_user %>
          <%= "@#{@current_user.name}" %>
        <% end %>
      </span>
    </div>
    <%= form_tag("/posts/new", class: "form-inline") do %>
      <div class="card-body">
        <textarea name="content" class="form-control" placeholder="質問を投稿する"></textarea>
        <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
      </div>
      <div class="card-footer text-right">
        <%= submit_tag "質問する", class: "btn btn-primary btn-sm mr-3" %>
      </div>
    <% end %>
  </div>

  <% @posts.each do |post| %>
    <div class="card text-center mb-3">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span><%= "@#{post.user.name}" %></span>
        <small class="bg-light"><%= post.created_at.strftime("%Y-%m-%d %H:%M") %></small>
      </div>
      <div class="card-body">
        <h5 class="card-text"><%= post.content %></h5>
      </div>
      <div class="card-footer text-muted">
      <div class= 'text-center' >
                  <div class="card my-2 d-inline-block text-start">
                    <div class="card-body p-2">
                      <small class="text-muted">AI</small>
                      <p class="mb-0">AIによる返信</p>
                    </div>
                  </div>
                </div>

        <% post.replies.each_with_index do |reply, index| %>
          <div class='text-start'>
            <div class="card my-2 d-inline-block text-start" style="<%= index > 0 ? 'display: none;' : '' %>">
              <div class="card-body p-2">
                <small class="text-muted"><%= "@#{reply.user.name}" %></small>
                <p class="mb-0"><%= reply.content %></p>
              </div>
            </div>
          </div>
        <% end %>

        <%= form_tag("/posts/reply", class: "form-inline mt-3", style: "display: none;") do %>
          <div class="input-group">
            <textarea name="content" class="form-control" placeholder="返信を入力"></textarea>
            <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
            <%= hidden_field_tag :post_id, post.id %>
            <button type="submit" class="btn btn-primary btn-sm">
              <i class="bi bi-reply"></i> <!-- Bootstrapアイコンの使用 -->
            </button>
          </div>
        <% end %>
        
        <button class="btn btn-secondary btn-sm toggle-reply">
          <i class="bi bi-arrow-down-up"></i> <!-- モダンなアイコンの使用 -->
        </button>
      </div>
    </div>
  <% end %>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const toggleButtons = document.querySelectorAll(".toggle-reply");
    
    toggleButtons.forEach(button => {
      button.addEventListener("click", function() {
        const parentCard = this.closest(".card");
        const replyForm = parentCard.querySelector("form");
        const replies = parentCard.querySelectorAll(".card.my-2");
        
        if (replyForm.style.display === "none" || replyForm.style.display === "") {
          replyForm.style.display = "block";
          replies.forEach(reply => {
            reply.style.display = "block";
          });
        } else {
          replyForm.style.display = "none";
          replies.forEach((reply, index) => {
            if (index > 0) {
              reply.style.display = "none";
            }
          });
        }
      });
    });
  });
</script>




/*ver3*/

<div class="col-sm-10 col-lg-8 col-xl-6 mx-auto">
  <div class="card text-center mb-3">
    <div class="card-header d-flex justify-content-between align-items-center">
      <span>
        <% if @current_user %>
          <%= "@#{@current_user.name}" %>
        <% end %>
      </span>
    </div>
    <%= form_tag("/posts/new", class: "form-inline") do %>
      <div class="card-body">
        <textarea name="content" class="form-control" placeholder="質問を投稿する"></textarea>
        <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
      </div>
      <div class="card-footer text-right">
        <%= submit_tag "質問する", class: "btn btn-primary btn-sm mr-3" %>
      </div>
    <% end %>
  </div>

  <% @posts.each do |post| %>
    <div class="card text-center mb-3">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span><%= "@#{post.user.name}" %></span>
        <small class="bg-light"><%= post.created_at.strftime("%Y-%m-%d %H:%M") %></small>
      </div>
      <div class="card-body">
        <h5 class="card-text"><%= post.content %></h5>
      </div>
      <div class="card-footer text-muted">
        <div class="text-center">
          <div class="card my-2 d-inline-block text-start ai-reply-card" style="display: none;">
            <div class="card-body p-2">
              <small class="text-muted">AI</small>
              <p class="mb-0">AIによる返信</p>
            </div>
          </div>
        </div>

        <% post.replies.each_with_index do |reply, index| %>
          <div class='text-start'>
            <div class="card my-2 d-inline-block text-start" style="<%= index > 0 ? 'display: none;' : '' %>">
              <div class="card-body p-2">
                <small class="text-muted"><%= "@#{reply.user.name}" %></small>
                <p class="mb-0"><%= reply.content %></p>
              </div>
            </div>
          </div>
        <% end %>

        <%= form_tag("/posts/reply", class: "form-inline mt-3", style: "display: none;") do %>
          <div class="input-group">
            <textarea name="content" class="form-control" placeholder="返信を入力"></textarea>
            <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
            <%= hidden_field_tag :post_id, post.id %>
            <button type="submit" class="btn btn-primary btn-sm">
              <i class="bi bi-reply"></i>
            </button>
          </div>
        <% end %>

        <button class="btn btn-secondary btn-sm toggle-reply">
          <i class="bi bi-arrow-down-up"></i>
        </button>
      </div>
    </div>
  <% end %>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const toggleButtons = document.querySelectorAll(".toggle-reply");

    toggleButtons.forEach(button => {
      button.addEventListener("click", function() {
        const parentCard = this.closest(".card");
        const replyForm = parentCard.querySelector("form");
        const replies = parentCard.querySelectorAll(".card.my-2");
        const aiReplyCard = parentCard.querySelector(".ai-reply-card");

        if (replyForm.style.display === "none" || replyForm.style.display === "") {
          replyForm.style.display = "block";
          aiReplyCard.style.display = "block";
          replies.forEach(reply => {
            reply.style.display = "block";
          });
        } else {
          replyForm.style.display = "none";
          aiReplyCard.style.display = "none";
          replies.forEach((reply, index) => {
            if (index > 0) {
              reply.style.display = "none";
            }
          });
        }
      });
    });

    const questionForms = document.querySelectorAll("form[action='/posts/new']");

    questionForms.forEach(form => {
      form.addEventListener("submit", function(event) {
        event.preventDefault();

        const content = form.querySelector("textarea[name='content']").value;
        const authenticityToken = form.querySelector("input[name='authenticity_token']").value;

        fetch('/posts', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': authenticityToken
          },
          body: JSON.stringify({ content: content })
        })
        .then(response => response.json())
        .then(post => {
          const aiReplyCard = document.querySelector(`.card[data-post-id='${post.id}'] .ai-reply-card`);
          getAIReply(post.id, content).then(aiReply => {
            aiReplyCard.querySelector('p').innerText = aiReply;
            aiReplyCard.style.display = "block";
          });
        })
        .catch(error => {
          console.error('Error:', error);
        });

        form.reset();
      });
    });
  });

  function getAIReply(postId, question) {
    return fetch('https://bard-api-endpoint.example.com/ask', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer YOUR_API_KEY_HERE'
      },
      body: JSON.stringify({ question: question })
    })
    .then(response => response.json())
    .then(data => {
      const replyContent = data.reply; // Adjust based on the actual response structure

      // Save the reply to the database
      return fetch('/posts/reply', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': authenticityToken
        },
        body: JSON.stringify({
          post_id: postId,
          user_id: 5,
          content: replyContent
        })
      })
      .then(response => response.json())
      .then(() => replyContent)
      .catch(error => {
        console.error('Error saving AI reply:', error);
        return replyContent;
      });
    })
    .catch(error => {
      console.error('Error fetching AI reply:', error);
      return 'AIによる返信が失敗しました。';
    });
  }
</script>






<div class="chat-input-form">
          <%= form_tag("/posts/create", class: "mb-3") do %>
            <div class="input-group">
              <textarea name="content" class="form-control" placeholder="Ask a question..."></textarea>
              <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
              <button type="submit" class="btn send-button">
                <i class="bi bi-send"></i>
                <i class="bi bi-send-fill"></i>
              </button>
            </div>
          <% end %>
        </div>





<div class="container">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="mb-4">
        <% if @current_user %>
          <div class="text-center mb-4 mt-4">
            <h3 class="fw-bold text-light">@ <%= @current_user.name %></h3>
          </div>
        <% end %>

        <%= form_tag("/posts/create", class: "mb-3") do %>
          <div class="input-group">
            <div class="left-brock"></div>
            <textarea name="content" class="form-control2" placeholder=""></textarea>
            <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
            <button type="submit" class="btn send-button">
              <i class="bi bi-send"></i>
              <i class="bi bi-send-fill"></i>
            </button>
          </div>
        <% end %>
      </div>

      <% @posts.each do |post| %>
        <div class="card mb-4 bg-dark text-light post-card" style="cursor: pointer;">
          <div class="card-header d-flex justify-content-between align-items-center">
            <span>@<%= post.user.name %></span>
            <small class="text-muted"><%= post.created_at.strftime("%Y-%m-%d %H:%M") %></small>
          </div>
          <div class="card-body">
            <h5 class="card-text"><%= post.content %></h5>
          </div>
          <div class="card-footer d-none">
            <% post.replies.each do |reply| %>
              <div class="mb-2">
                <div class="d-flex align-items-top">
                  <small class="me-2">@<%= reply.user.name %></small>
                  <p class="mb-0"><%= reply.content %></p>
                </div>
              </div>
            <% end %>

            <%= form_tag("/posts/reply", class: "mb-3") do %>
              <div class="input-group">
                 <%= link_to '', '/posts/destroy', method: :delete, class: 'left-brock2 bi2 bi-file-earmark-x', data: { confirm: '本当に削除しますか？'}%>
                
                <textarea name="content" class="form-control3" placeholder=""></textarea>
                <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
                <%= hidden_field_tag :post_id, post.id %>
                <button type="submit" class="btn send-button ">
                  <i class="bi bi-reply"></i>
                </button>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.post-card').forEach(function(card) {
      card.addEventListener('click', function() {
        var footer = card.querySelector('.card-footer');
        if (footer.classList.contains('d-none')) {
          footer.classList.remove('d-none');
        } else {
          footer.classList.add('d-none');
        }
      });
    });
  });
</script>



<div class="container">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="mb-4">
        <% if @current_user %>
          <div class="text-center mb-4 mt-4">
            <h3 class="fw-bold text-light">@ <%= @current_user.name %></h3>
          </div>
        <% end %>

        <%= form_tag("/posts/create", class: "mb-3") do %>
          <div class="input-group">
            <div class="left-brock"></div>
            <textarea name="content" class="form-control2" placeholder=""></textarea>
            <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
            <button type="submit" class="btn send-button">
              <i class="bi bi-send"></i>
              <i class="bi bi-send-fill"></i>
            </button>
          </div>
        <% end %>
      </div>

      <% @posts.each do |post| %>
        <div class="card mb-4 bg-dark text-light post-card" style="cursor: pointer;">
          <div class="card-header d-flex justify-content-between align-items-center">
            <span>@<%= post.user.name %></span>
            <small class="text-muted"><%= post.created_at.strftime("%Y-%m-%d %H:%M") %></small>
          </div>
          <div class="card-body">
            <h5 class="card-text"><%= post.content %></h5>
          </div>
          <div class="card-footer d-none">
            <% post.replies.each do |reply| %>
              <div class="mb-2">
                <div class="d-flex align-items-top">
                  <small class="me-2">@<%= reply.user.name %></small>
                  <p class="mb-0"><%= reply.content %></p>
                </div>
              </div>
            <% end %>

            <%= form_tag("/posts/reply", class: "mb-3") do %>
              <div class="input-group">
                 <%= link_to '', '/posts/destroy', method: :delete, class: 'left-brock2 bi2 bi-file-earmark-x', data: { confirm: '本当に削除しますか？'}%>
                
                <textarea name="content" class="form-control3" placeholder=""></textarea>
                <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
                <%= hidden_field_tag :post_id, post.id %>
                <button type="submit" class="btn send-button ">
                  <i class="bi bi-reply"></i>
                </button>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.post-card').forEach(function(card) {
      card.addEventListener('click', function() {
        var footer = card.querySelector('.card-footer');
        if (footer.classList.contains('d-none')) {
          footer.classList.remove('d-none');
        } else {
          footer.classList.add('d-none');
        }
      });
    });
  });
</script>



  def destroy
    @post = Post.find(params[:id])
    if @post.user_id == @current_user.id
      @post.destroy
      flash[:notice] = "投稿を削除しました"
    else
      flash[:alert] = "削除権限がありません"
    end
    redirect_to action: :index
  end 



  def destroy
    @post = Post.find_by(id: params[:post_id])
    if @post && @post.user_id == @current_user.id
      @post.destroy
      respond_to do |format|
        format.html { redirect_to posts_path, notice: 'Post was successfully destroyed.' }
        format.json { head :no_content }
        
      end
    else
      respond_to do |format|
        format.html { redirect_to posts_path, alert: 'Post could not be destroyed.' }
        format.json { render json: { error: 'Post could not be destroyed' }, status: :unprocessable_entity }
      end
    end
  end


  def destroy
    @post = Post.find(params[:id])
    @post.destroy
    respond_to do |format|
      format.html { redirect_to posts_url, notice: 'Post was successfully destroyed.' }
      format.json { head :no_content }
    end
  end


 def initialize(api_key)
    @api_key = api_key
  end

  ChatGPTClient.configure do |config|
    config.api_key = ENV['CHAT_GPT_API_KEY']
  end

  def destroy
    @post = Post.find_by(id: params[:id])
    if  @post.user_id ==  User.find(session[:user_id])  || set_current_user == 3
     @post.destroy
      respond_to do |format|
      format.html { redirect_to ("/posts/index"), notice: '投稿は削除されました。' }
      format.json { head :no_content }
      end
    else
      flash[:error] = "削除する権限がありません。"
      redirect_to ("/posts/index")
    end
  end

  def destroy
    @post = Post.find_by(id: params[:id])
     @post.destroy
      respond_to do |format|
      format.html { redirect_to ("/posts/index"), notice: '投稿は削除されました。' }
      format.json { head :no_content }
      end
  end


  <div class="b-example-divider"></div>

  <div class="px-4 py-5 my-5 text-center ">
    <h1 class="display-5 fw-bold mb-4">Centered hero</h1>
    <div class="col-lg-6 mx-auto">
      <p class="lead mb-4"></p>
      <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
        <button type="button" class="btn btn-primary btn-lg px-4 gap-3">Primary button</button>
        <button type="button" class="btn btn-outline-secondary btn-lg px-4">Secondary</button>
      </div>
    </div>
  </div>


  <button type="button" class="btn btn-primary btn-lg px-4 gap-3">Primary button</button>
        <button type="button" class="btn btn-outline-secondary btn-lg px-4">Secondary</button>


        20240524


        def create
    @content = params[:content]
    @post = Post.new(content: params[:content], user_id: session[:user_id])
  if @content != nil
    if @post.save
      api_key = ENV['CHAT_GPT_API_KEY']
      client = ChatGPTClient.new(api_key)
      @question = params[:content] + "また300文字以内に要約してください。"
      puts @question
      @answer = client.ask_question(@question)

      if @answer && @answer["choices"]
        reply_content = @answer["choices"].first["message"]["content"]
        reply = Reply.new(content: reply_content, user_id: 2, post_id: @post.id)
        if reply.save
          redirect_to ("/posts/index")
        else
          flash[:error] = "Reply could not be saved."
          redirect_to ("/posts/index")
        end
      else
        flash[:error] = "No response from ChatGPT."
        redirect_to ("/posts/index")
      end
    else
      flash[:error] = "適切に投稿できませんでした。"
      redirect_to("/posts/index")
    end
  else
    flash[:error] = "内容が空です。"
    redirect_to ("/posts/index")
  end
  end

  heroku

  /app/vendor/bundle/ruby/3.3.0/gems/zeitwerk-2.6.15/lib/zeitwerk/loader/helpers