<div class="container">
  <div class="row justify-content-center">
    <div class="col-md-8">
      <div class="mb-4">
        <% if @current_user %>
          <div class="text-center mb-4 mt-4">
            <h3 class="fw-bold text-light">@ <%= @current_user.name %></h3>
          </div>
        <% end %>

        <%= form_tag("/posts/create", class: "mb-3") do %>
          <div class="input-group ">
            <div class="left-brock"></div>
            <textarea name="content" class="form-control2 " placeholder=""></textarea>

            <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
            <button type="submit" class="btn send-button">
              <i class="bi bi-send"></i>
              <i class="bi bi-send-fill"></i>
            </button>
          </div>
        <% end %>
      </div>

      <% @posts.each do |post| %>
        <div class="card mb-4 bg-dark text-light post-card" style="cursor: pointer;">
          <div class="card-header d-flex justify-content-between align-items-center">
            <span>@<%= post.user.name %></span>
            <small class="text-muted"><%= post.created_at.strftime("%Y-%m-%d %H:%M") %></small>
          </div>
          <div class="card-body">
            <h5 class="card-text"><%= post.content %></h5>
          </div>
          <div class="card-footer d-none">
            <% post.replies.each do |reply| %>
              <div class="mb-2">
                <div class="d-flex align-items-top">
                  <small class="me-2">@<%= reply.user.name %></small>
                  <p class="mb-0"><%= reply.content %></p>
                </div>
              </div>
            <% end %>

            <%= form_tag("/posts/reply", class: "mb-3") do %>
              <div class="input-group">
                <%= link_to '', '#', class: 'left-brock2 bi2 bi-file-earmark-x delete-link', data: { post_id: post.id } %>
                <textarea name="content" class="form-control3" placeholder=""></textarea>
                <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
                <%= hidden_field_tag :post_id, post.id %>
                <button type="submit" class="btn send-button">
                  <i class="bi bi-reply"></i>
                </button>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>


 <script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.post-card').forEach(function(card) {
      card.addEventListener('click', function(event) {
        var footer = card.querySelector('.card-footer');
        if (event.target.tagName.toLowerCase() === 'textarea') {
          return;
        }
        footer.classList.toggle('d-none');
      });
    });

    document.querySelectorAll('.delete-link').forEach(function(link) {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        var postId = this.getAttribute('data-post-id');
        var card = this.closest('.post-card'); // 削除される投稿のカードを取得
        if (confirm('本当に投稿を削除してもよろしいですか？')) {
          fetch('/posts/' + postId, { // 削除用のURLを修正
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
            }
          }).then(function(response) {
            if (response.ok) {
              console.log('Post deleted successfully.');
              card.remove(); // 削除された投稿をリストから削除
            } else {
              response.json().then(function(data) {
                console.error('Failed to delete post:', data.error);
              });
            }
          }).catch(function(error) {
            console.error('An error occurred:', error);
          });
        }
      });
    });
  });
</script>

<script>
  // ページを離れる前にスクロール位置を保存
  window.addEventListener('beforeunload', function() {
    localStorage.setItem('scrollPosition', window.scrollY);
  });

  // ページがロードされたときにスクロール位置を復元
  window.addEventListener('load', function() {
    const scrollPosition = localStorage.getItem('scrollPosition');
    if (scrollPosition) {
      window.scrollTo(0, scrollPosition);
      localStorage.removeItem('scrollPosition'); // 位置を一度だけ使用する場合は削除
    }
  });
</script>
